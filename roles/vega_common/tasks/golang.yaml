---
- name: Install Go | Check if Go installed
  ansible.builtin.command: "go version"
  register: go_installed_version
  changed_when: false
  failed_when: go_installed_version.rc != 0 and go_installed_version.rc != 127 and go_installed_version.rc != 2
  check_mode: false  # always run for real
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin"

- name: Install Go | Install Golang
  when:
    - (go_installed_version.rc != 0) or (not vega_common_go_version in go_installed_version.stdout)
  block:

    - name: Install Go | Remove /usr/local/go - cos it contains old version
      ansible.builtin.file:
        path: /usr/local/go
        state: absent
      when:
        - not vega_common_go_version in go_installed_version.stdout

    - name: Install Go | Download Go install tarball
      ansible.builtin.get_url:
        url: "https://golang.org/dl/go{{ vega_common_go_version }}.linux-amd64.tar.gz"
        dest: "/tmp"
        mode: "0644"

    - name: Install Go | Extract Go install tarball
      become: true
      ansible.builtin.unarchive:
        src: "/tmp/go{{ vega_common_go_version }}.linux-amd64.tar.gz"
        dest: /usr/local
        copy: false
      when: not ansible_check_mode

    - name: 'Install Go | Add Golang bin dir to PATH'
      ansible.builtin.copy:
        mode: "0644"
        dest: /etc/profile.d/golang.sh
        content: 'PATH=$PATH:/usr/local/go/bin'

    - name: Install Go | Create a symbolic link for go binary
      ansible.builtin.file:
        src: /usr/local/go/bin/go
        dest: /usr/local/bin/go
        state: link
        mode: '0755'
      when: not ansible_check_mode
