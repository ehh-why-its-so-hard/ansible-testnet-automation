(node_identification) {
        header X-Vega-Node-Id "{{- vega_caddy_server_node_id  if vega_caddy_server_node_id | length > 0 else inventory_hostname -}}"
}

(default_access_logs) {
        log {
                output stderr
                format json
        }
}

(default_headers) {
        header ?X-Forwarded-For {client_ip}
}


{
        # acme_ca https://acme.zerossl.com/v2/DV90
        # email todo...
        # order replace after encode

        servers {
                metrics
        }
        order geo_ip first
}

(cors) {
        @cors_preflight method OPTIONS

        handle @cors_preflight {
                header Access-Control-Allow-Origin "{args.0}"
                header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE"
                header Access-Control-Allow-Headers "*"
                header Access-Control-Max-Age "3600"
                respond "" 204
        }

        @origin header Origin {args.0}
        header @origin Access-Control-Allow-Origin "{args.0}"
        header @origin Access-Control-Allow-Methods "OPTIONS,HEAD,GET,POST,PUT,PATCH,DELETE"
        header @origin Vary Origin
}

(geoblocking) {
  geo_ip {
    reload_frequency 3h
    db_path /etc/caddy/GeoLite2-Country.mmdb
    trust_header X-Real-IP
  }

   @blockedCountries {
     maxmind_geolocation {
        db_path /etc/caddy/GeoLite2-Country.mmdb
        # We have allow countries because We want to return static pages to the following countries
        allow_countries {{ vega_caddy_server_geoblocking_countries }}
     }
  }

   handle @blockedCountries {
    respond "Sorry, page not available in this country \{geoip.country_code\} {http.request.remote.host} !!!" 401
  }
}

import /etc/caddy/sites/*.caddy