---
- name: Check if backup of original config already created
  ansible.builtin.stat:
    path: /home/vega/tendermint_home/config/config.toml.orig
  register: config_backup

- name: Backup original configuration
  ansible.builtin.copy:
    remote_src: true
    src: "{{- item.src -}}"
    dest: "{{- item.dest -}}"
    owner: vega
    group: vega
    mode: '0755'
  with_items:
    - src: /home/vega/tendermint_home/config/config.toml
      dest: /home/vega/tendermint_home/config/config.toml.orig
    - src: /home/vega/vega_home/config/node/config.toml
      dest: /home/vega/vega_home/config/node/config.toml.orig
  when: not config_backup.stat.exists

- name: "Backup original configuration for data-node"
  ansible.builtin.copy:
    remote_src: true
    src: /home/vega/vega_home/config/data-node/config.toml
    dest: /home/vega/vega_home/config/data-node/config.toml.orig
    owner: vega
    group: vega
    mode: '0755'
  when: not config_backup.stat.exists and vega_core_with_data_node


- name: Tendermint config
  ansible.builtin.template:
    src: "home/vega/tendermint_home/config/config.toml.j2"
    dest: "/home/vega/tendermint_home/config/config.toml"
    owner: "vega"
    group: "vega"
    mode: "0664"

- name: Core config
  ansible.builtin.template:
    src: "home/vega/vega_home/config/node/config.toml.j2"
    dest: "/home/vega/vega_home/config/node/config.toml"
    owner: "vega"
    group: "vega"
    mode: "0664"

- name: Download genesis
  ansible.builtin.get_url:
    url: "{{- vega_core_genesis_url -}}"
    dest:  /home/vega/tendermint_home/config/genesis.json
    mode: '0644'
    owner: vega
    group: vega

- name: Check that genesis was already prepared
  ansible.builtin.stat:
    path: /home/vega/vegavisor_home/genesis/vega1
  register: genesis_visor_prepared

- name: Prepare initial version vegavisor home
  when: not genesis_visor_prepared.stat.exists # when vega was already linked do not link incorrect version
  block:
  - name: Copy visor binary to vegavisor-home
    ansible.builtin.copy:
      remote_src: true
      src: /usr/local/bin/visor
      dest: /home/vega/vegavisor_home/visor
      owner: vega
      group: vega
      mode: '0755'
        
  - name: Visor config
    ansible.builtin.template:
      src: "home/vega/vegavisor_home/config.toml.j2"
      dest: "/home/vega/vegavisor_home/config.toml"
      owner: "vega"
      group: "vega"
      mode: "0664"

  - name: Visor genesis config
    ansible.builtin.template:
      src: "home/vega/vegavisor_home/genesis/run-config.toml.j2"
      dest: "/home/vega/vegavisor_home/genesis/run-config.toml"
      owner: "vega"
      group: "vega"
      mode: "0664"
    
  - name: Create a symbolic link
    ansible.builtin.file:
      src: /home/vega/vegavisor_home/genesis
      dest: /home/vega/vegavisor_home/current
      owner: vega
      group: vega
      state: link

  - name: Copy vega binary to vegavisor-home/genesis
    ansible.builtin.copy:
      remote_src: true
      src: /usr/local/bin/vega
      dest: /home/vega/vegavisor_home/genesis/vega
      owner: root
      group: root
      mode: '0755'


- name: Data node config(template only)
  ansible.builtin.template:
    src: "home/vega/vega_home/config/data-node/config.toml.j2"
    dest: "/home/vega/vega_home/config/data-node/config.toml.tmpl"
    owner: "vega"
    group: "vega"
    mode: "0664"
  when: vega_core_with_data_node
  register: data_node_config_render

- name: Data node config
  ansible.builtin.template:
    src: "home/vega/vega_home/config/data-node/config.toml.j2"
    dest: "/home/vega/vega_home/config/data-node/config.toml"
    owner: "vega"
    group: "vega"
    mode: "0664"
  when: vega_core_with_data_node and data_node_config_render.changed # only when data-node config template changed

- name: Feed data-node config with generated values
  ansible.builtin.shell: |
    set -o pipefail
    VAL=$(dasel -f /home/vega/vega_home/config/data-node/config.toml.orig -r toml "{{- item -}}" | xargs);
    dasel put -f "/home/vega/vega_home/config/data-node/config.toml" -r toml "{{- item -}}" -v "$VAL"
    echo "config_updated"
  args:
    executable: /bin/bash
  register: update_data_node_config
  when: data_node_config_render.changed and vega_core_with_data_node
  changed_when: "'config_updated' in update_data_node_config.stdout"
  become: true
  become_user: vega
  with_items:
    - ".NetworkHistory.Store.PeerID"
    - ".NetworkHistory.Store.PrivKey"
