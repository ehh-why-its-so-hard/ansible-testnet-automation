---
- name: Configure | Tune timescaledb
  ansible.builtin.shell: |
    # https://github.com/timescale/timescaledb/issues/2991
    mkdir -p /root/go/bin;
    GOHOME=/root/go GOBIN=/root/go/bin go install github.com/timescale/timescaledb-tune/cmd/timescaledb-tune@main
    mv /root/go/bin/timescaledb-tune /usr/local/bin/timescaledb-tune

    /usr/local/bin/timescaledb-tune --yes && touch /.timescaledb-tune-finished
  args:
    creates: /.timescaledb-tune-finished


- name: Configure | Custom configuration changes to postgresql.conf
  ansible.builtin.lineinfile:
    path: "/etc/postgresql/{{- vega_postgresql_version -}}/main/postgresql.conf"
    regexp: "^#?{{ item.key }} =.*"
    line: "{{ item.key }} = {{ item.value }}"
  with_dict:
    - port: 5432
    - shared_preload_libraries: "'timescaledb'"
    - timescaledb.telemetry_level: "off"
    - restart_after_crash: "off"
    - data_directory: "'{{ external_postgresql_home if vega_postgresql_external_data_directory != '' else internal_postgresql_home }}'"
    # Tunning for OOM issues
    # - max_connections: "50"
    # - work_mem: "5MB"
    # - temp_buffers: "5MB"
    # - huge_pages: "off" # May increase CPU time spent on memory management, decrease performance, ref: https://postgresqlco.nf/doc/en/param/huge_pages/
    # - shared_memory_type: "sysv"
    # - dynamic_shared_memory_type: "sysv"
    # https://www.postgresql.org/docs/current/runtime-config-logging.html
    - log_rotation_age: 7d
    - log_rotation_size: 1024MB
    - log_min_duration_statement: "60s"
    # max_lock_per_transaction needs to be bigger when there is more partitions.
    # It is how the TimescaleDB works, so we need to increase it.
    # https://www.cybertec-postgresql.com/en/postgresql-you-might-need-to-increase-max_locks_per_transaction/
    - max_locks_per_transaction: 256
  vars:
    external_postgresql_home: "{{- vega_postgresql_external_data_directory -}}/main"
    internal_postgresql_home: "/var/lib/postgresql/{{- vega_postgresql_version -}}/main"
  register: psql_config

- name: Configure | Check if data already migrated
  ansible.builtin.stat:
    path: "{{- vega_postgresql_external_data_directory -}}/main"
  register: directory_data_migrated

- name: Configure | Migrate previous home
  ansible.builtin.shell: |
    set -o pipefail

    cp -r "/var/lib/postgresql/{{- vega_postgresql_version -}}/main" "{{- vega_postgresql_external_data_directory -}}/main";
    chown -R postgres:postgres "{{- vega_postgresql_external_data_directory -}}";
    find "{{- vega_postgresql_external_data_directory -}}" -type d ! -perm 0750 -exec chmod 0750 {} \;
    find "{{- vega_postgresql_external_data_directory -}}" -type f ! -perm 0640 -exec chmod 0640 {} \;
  args:
    creates: "{{- vega_postgresql_external_data_directory -}}/main"
    executable: /bin/bash
  register: migrate_psql_home
  notify: "Restart postgresql"
  when: vega_postgresql_external_data_directory != '' and not directory_data_migrated.stat.exists

- name: Enforce postgresql restart
  ansible.builtin.service:
    state: restarted
    enabled: true
    name: postgresql
  when: psql_config.changed or migrate_psql_home.changed
